[tool.poetry]
name = "uciparse"
version = "0.0.0" # published version is managed using Git tags (see below)
description = "Parse and emit OpenWRT uci-format files"
authors = ["Kenneth J. Pronovici <pronovic@ieee.org>"]
license = "Apache-2.0"
readme = "PyPI.md"
homepage = "https://pypi.org/project/uciparse/"
repository = "https://github.com/pronovic/uci-parse"
include = [
   { path = 'Changelog', format = 'sdist' },
   { path = 'NOTICE', format = 'sdist' },
   { path = 'LICENSE', format = 'sdist' },
   { path = 'README.md', format = 'sdist' },
   { path = 'docs', format = 'sdist' },
   { path = 'tests', format = 'sdist' },
   { path = 'scripts', format = 'sdist' },
]
packages = [ { include = "uciparse", from = "src" } ]
classifiers=[
   "Programming Language :: Python :: 3",
   "License :: OSI Approved :: Apache Software License",
   "Operating System :: OS Independent",
   "Environment :: Console",
   "Intended Audience :: System Administrators",
   "Natural Language :: English",
   "Topic :: System :: Systems Administration",
]

# Published version is managed using Git tags
# We get either the tag (like "0.24.1") or a snapshot-type version (like "0.24.1+3.e8319c4")
# If the plugin is not installed, then the version is always "0.0.0", taken from above
[tool.poetry-dynamic-versioning]
enable = true
pattern = '^[vV](?P<base>\d+\.\d+\.\d+)'  # this extracts the version from our vX.Y.Z tag format
format-jinja = "{% if distance == 0 and not dirty %}{{ base }}{% else %}{{ base }}+{{ distance }}.{{ commit }}{% endif %}"

[tool.poetry.scripts]
uciparse = "uciparse.cli:parse"
ucidiff = "uciparse.cli:diff"

[tool.poetry.dependencies]
python = ">=3.7.2,<4"
sphinx = { version="^4.5.0", optional=true }
sphinx-autoapi = { version="^1.8.4", optional=true }
toml = { version="^0.10.2", optional=true }

[tool.poetry.extras]
docs = [ "sphinx", "sphinx-autoapi", "toml" ]

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.2"
pytest-testdox = "^3.0.1"
coverage = "^6.3.2"
pylint = "^2.15.0"
pre-commit = "^2.18.1"
black = "^22.3.0"
mypy = "^0.950"
isort = "^5.10.1"
coveralls = "^3.3.1"
colorama = "^0.4.5"

[tool.black]
line-length = 132
target-version = ['py37', 'py38', 'py39', 'py310' ]
include = '(src\/scripts\/.*$|\.pyi?$)'
exclude = '''
/(
    \.git
  | __pycache__
  | \.tox
  | \.venv
  | \.poetry
  | build
  | dist
  | docs
  | notes
)/
'''

[tool.isort]
profile = "black"
line_length = 132
skip_glob = [ "docs", "notes" ]

[build-system]
requires = ["poetry>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
